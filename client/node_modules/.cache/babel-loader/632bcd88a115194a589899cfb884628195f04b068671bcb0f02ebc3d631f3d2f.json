{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adm\\\\Desktop\\\\app - Copia\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; //! Biblioteca do react a ser instalada com o pacote de \"Component\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Register from './pages/Register';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n;\nexport default App;\n\n// | //Basicamente a função abaixo se trata de classificar o \"App\" como uma extensão de que o \"Component\" faz;\n// chamadaAPI = async () => {\n//   let resposta = await fetch(\"/api\");\n//   let body = await resposta.json();\n\n//   if (resposta.status !== 200) {\n//     throw Error(\"Erro no status da Api :(\");\n//   };\n\n//   return body;\n// }; // A conexão com a API em si pelo uso assíncrono do fetch na rota \"/api\" [ futuramente será bem alterado essa parte ] e retornando as respostas [ mensagens vindas delas no \"res\" ] como JSON;\n\n// | // chamadaCadastro = async () => {\n// | //   let resposta = await fetch(\"/cadastro\");\n// | //   let body = await resposta.json();\n\n// | //   if (resposta.status !== 200) {\n// | //     throw Error(\"Erro no status do Cadastro :(\");\n// | //   };\n\n// | //   return body;\n// | // };\n\n// componentDidMount() {\n//   this.chamadaAPI()\n//     .then(res => {\n//       this.setState({ \n//       resposta: res.mensagem,\n//       teste: res.teste });\n//     })\n//     .catch(err => console.error(\"Erro da chamada de API: \", err));\n\n//  |   // this.chamadaCadastro()\n//  |   // .then(res => {\n//  |   //   this.setState({ \n//  |   //     teste: res.teste\n//  |   //    }).catch(err => console.error(\"Erro da chamada do Cadastro: \", err));\n//  |   // }) \n// }; // Ativando a cada instância do projeto a chamada pela API [ chamadaAPI ] e transformando a resposta na mensagem que vem de API [ res.mensagem ];\n\n// render() {\n//   return (\n//     <div className=\"App\">\n//       <p className=\"Api-teste\">{this.state.teste} = teste</p>\n//       <p className=\"Api_mensagem\">{this.state.resposta}</p>\n//      <Register />\n//     </div>\n//   );\n// };\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","logo","Register","BrowserRouter","Routes","Route","Home","jsxDEV","_jsxDEV","App","children","index","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adm/Desktop/app - Copia/client/src/App.js"],"sourcesContent":["import React, {Component} from \"react\"; //! Biblioteca do react a ser instalada com o pacote de \"Component\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Register from './pages/Register'\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Home from \"./pages/home\";\r\nfunction App(){\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n          <Routes>\r\n            <Route index path=\"/\" element={<Home />} />\r\n            <Route index path=\"/register\" element={<Register />}/>\r\n          </Routes>\r\n        </BrowserRouter>\r\n    );\r\n  };\r\n  \r\nexport default App;\r\n  \r\n// | //Basicamente a função abaixo se trata de classificar o \"App\" como uma extensão de que o \"Component\" faz;\r\n// chamadaAPI = async () => {\r\n//   let resposta = await fetch(\"/api\");\r\n//   let body = await resposta.json();\r\n\r\n//   if (resposta.status !== 200) {\r\n//     throw Error(\"Erro no status da Api :(\");\r\n//   };\r\n\r\n//   return body;\r\n// }; // A conexão com a API em si pelo uso assíncrono do fetch na rota \"/api\" [ futuramente será bem alterado essa parte ] e retornando as respostas [ mensagens vindas delas no \"res\" ] como JSON;\r\n\r\n// | // chamadaCadastro = async () => {\r\n// | //   let resposta = await fetch(\"/cadastro\");\r\n// | //   let body = await resposta.json();\r\n\r\n// | //   if (resposta.status !== 200) {\r\n// | //     throw Error(\"Erro no status do Cadastro :(\");\r\n// | //   };\r\n\r\n// | //   return body;\r\n// | // };\r\n\r\n// componentDidMount() {\r\n//   this.chamadaAPI()\r\n//     .then(res => {\r\n//       this.setState({ \r\n//       resposta: res.mensagem,\r\n//       teste: res.teste });\r\n//     })\r\n//     .catch(err => console.error(\"Erro da chamada de API: \", err));\r\n\r\n//  |   // this.chamadaCadastro()\r\n//  |   // .then(res => {\r\n//  |   //   this.setState({ \r\n//  |   //     teste: res.teste\r\n//  |   //    }).catch(err => console.error(\"Erro da chamada do Cadastro: \", err));\r\n//  |   // }) \r\n// }; // Ativando a cada instância do projeto a chamada pela API [ chamadaAPI ] e transformando a resposta na mensagem que vem de API [ res.mensagem ];\r\n\r\n// render() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <p className=\"Api-teste\">{this.state.teste} = teste</p>\r\n//       <p className=\"Api_mensagem\">{this.state.resposta}</p>\r\n//      <Register />\r\n//     </div>\r\n//   );\r\n// };\r\n// };\r\n\r\n// export default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO,CAAC,CAAC;AACxC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SACEC,aAAa,EACbC,MAAM,EACNC,KAAK,QACA,kBAAkB;AACzB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,SAASC,GAAGA,CAAA,EAAE;EAEZ,oBACED,OAAA,CAACL,aAAa;IAAAO,QAAA,eACRF,OAAA,CAACJ,MAAM;MAAAM,QAAA,gBACLF,OAAA,CAACH,KAAK;QAACM,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEL,OAAA,CAACF,IAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CT,OAAA,CAACH,KAAK;QAACM,KAAK;QAACC,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEL,OAAA,CAACN,QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEtB;AAACC,EAAA,GAVMT,GAAG;AAUT;AAEH,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}